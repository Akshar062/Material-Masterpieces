name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Check Commit Message Format
        run: |
          COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.sha }})
          if ! echo "$COMMIT_MESSAGE" | grep -Eq "^(feat|fix|chore|docs|style|refactor|perf|test|release): "; then
            echo "‚ùå Commit message does not follow convention! (e.g., feat: new button)"
            exit 1
          fi
      
      - name: Grant Execute Permission for Gradlew
        run: chmod +x gradlew

      - name: Run Lint Checks
        run: ./gradlew lint

      - name: Run Unit Tests
        run: ./gradlew test

  build-and-draft-release:
    needs: verify
    if: contains(github.event.head_commit.message, 'release:')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Build APK
        run: ./gradlew assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: app-release.apk
          path: app/build/outputs/apk/release/app-release.apk

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: true
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive

  manual-approval:
    needs: build-and-draft-release
    runs-on: ubuntu-latest
    steps:
      - name: Wait for Manual Approval
        uses: hmarr/auto-approve-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          approval-message: "üöÄ Ready for release! Approve to publish."

  publish-release:
    needs: manual-approval
    runs-on: ubuntu-latest
    steps:
      - name: Publish Draft Release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const releases = await github.rest.repos.listReleases({ owner, repo });
            const draftRelease = releases.data.find(r => r.draft);
            if (draftRelease) {
              await github.rest.repos.updateRelease({
                owner,
                repo,
                release_id: draftRelease.id,
                draft: false
              });
              console.log(`‚úÖ Published release: ${draftRelease.name}`);
            } else {
              console.log("‚ö†Ô∏è No draft release found.");
            }
